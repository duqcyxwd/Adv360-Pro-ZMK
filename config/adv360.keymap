/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt { quick-tap-ms = <300>; };

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        c_hm: custom_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "CUST_HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <0>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        r_lt: r_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "REVERT_LAYER_TOGGLE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sl>;

            flavor = "tap-preferred";
        };

        c_hm_l: c_hm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_HOME_MODE_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <0>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        c_hm_r: c_hm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_HOME_MODE_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <0>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Window_Left {
            bindings = <&kp LC(LEFT_ARROW)>;
            key-positions = <71 72>;
            layers = <0>;
        };

        Window_Right {
            bindings = <&kp LC(RIGHT_ARROW)>;
            key-positions = <73 74>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL                   &kp N1                &kp N2              &kp N3            &kp N4                &kp N5  &mo 3                                                                                                         &tog 1                   &kp N6  &kp N7          &kp N8           &kp N9    &kp N0    &kp MINUS
&kp TAB                     &kp Q                 &kp W               &kp E             &kp R                 &kp T   &kp LG(LS(NUMBER_4))                                                                                          &kp LC(UP_ARROW)         &kp Y   &kp U           &kp I            &kp O     &kp P     &kp BSLH
&kp ESC                     &c_hm LEFT_CONTROL A  &lt 4 S             &kp D             &kp F                 &kp G   &kp LEFT_SHIFT            &kp LEFT_SHIFT          &kp LEFT_ALT          &kp RIGHT_CONTROL  &kp RIGHT_COMMAND  &kp LC(DOWN_ARROW)       &kp H   &kp J           &kp K            &kp L     &kp SEMI  &kp SQT
&c_hm LEFT_CONTROL LG(TAB)  &c_hm LEFT_CONTROL Z  &c_hm LEFT_SHIFT X  &c_hm LEFT_ALT C  &c_hm LEFT_COMMAND V  &kp B                                                     &mo 5                 &kp PG_UP                                                      &kp N   &kp M           &kp COMMA        &kp DOT   &kp FSLH  &kp RSHFT
&mo 2                       &lt 5 GRAVE           &kp CAPS            &kp UP_ARROW      &kp DOWN                      &mt LEFT_COMMAND LG(TAB)  &mt LEFT_CONTROL ENTER  &mt LEFT_ALT END      &kp PAGE_DOWN      &kp BACKSPACE      &c_hm RIGHT_SHIFT SPACE          &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans                                      &trans     &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans     &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans     &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                     &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &kp KP_N0          &trans      &trans        &kp KP_DOT     &kp RBKT         &trans
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &trans                                           &trans       &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &bootloader                                      &bootloader  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none        &trans  &trans      &trans  &trans  &none        &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans      &trans                       &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans       &trans  &trans      &trans  &trans  &trans               &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                                                 &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans         &trans         &trans       &trans     &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans         &kp HOME       &kp END      &trans     &kp PAGE_UP  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &kp PAGE_DOWN  &kp PAGE_DOWN  &kp PAGE_UP  &trans     &trans       &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                 &trans         &trans       &trans     &trans       &trans
            >;
        };

        Mac {
            bindings = <
&trans  &trans                &trans              &trans              &trans               &trans               &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(LS(NUMBER_4))  &trans              &kp LG(TAB)         &trans               &trans               &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(LEFT_ARROW)    &kp LG(LEFT_ARROW)  &kt LC(UP_ARROW)    &kp LG(RIGHT_ARROW)  &kp LC(RIGHT_ARROW)  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                &trans              &kp LC(DOWN_ARROW)  &trans               &trans                               &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                &trans              &trans              &trans                                    &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
